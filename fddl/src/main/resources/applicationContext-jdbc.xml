<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
     http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<!-- 加载properties配置文件 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<!-- 这里支持多种寻址方式：classpath和file -->
				<value>classpath:dbconfig.properties</value>
			</list>
		</property>
	</bean>

	<!-- 数据库连接池 -->
	<bean id="dataSource1" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${db1.driver}" />
		<property name="jdbcUrl" value="${db1.url}" />
		<property name="user" value="${db1.username}" />
		<property name="password" value="${db1.password}" />
	</bean>

	<bean id="dataSource2" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${db2.driver}" />
		<property name="jdbcUrl" value="${db2.url}" />
		<property name="user" value="${db2.username}" />
		<property name="password" value="${db2.password}" />
	</bean>

	<bean id="dataSource" class="org.wit.fddl.datasource.DynamicDataSource">
		<property name="targetDataSources">
			<map key-type="java.lang.String">
				<entry key="DB1" value-ref="dataSource1" />
				<entry key="DB2" value-ref="dataSource2" />
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="dataSource1" />
	</bean>
	
	<!-- 配置jdbcTemplate -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate" >
	    <property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 事务管理器 基于数据源 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 启用注解事务配置 -->
	<tx:annotation-driven />
	
	<!-- 启动service扫描 -->
	<context:component-scan base-package="com.adchina.dbutil.service"/>

	<bean id="customDataHandler" class="org.wit.fddl.datahandle.CustomDataHandlerForJdbc">
		<constructor-arg>
			<list>
				<value>DB1</value>
				<value>DB2</value>
			</list>
		</constructor-arg>
		<constructor-arg name="jdbcTemplate" ref="jdbcTemplate" />
	</bean>
    
    <bean id="querySqlJdbcHandler" class="org.wit.fddl.sqlhandler.QuerySqlJdbcHandler">
        <constructor-arg>
            <list>
                <value>DB1</value>
                <value>DB2</value>
            </list>
        </constructor-arg>
        <constructor-arg name="jdbcTemplate" ref="jdbcTemplate" />
    </bean>

	<!-- 定义静态注入 -->
	<!-- <bean
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod"
			value="CustomDataHandlerContext.setCustomDataHandler" />
		<property name="arguments">
			<list>
				<ref bean="customDataHandler" />
			</list>
		</property>
	</bean> -->
    
    <bean
        class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod"
            value="org.wit.fddl.CustomDataHandlerContext.setQuerySqlJdbcHandler" />
        <property name="arguments">
            <list>
                <ref bean="querySqlJdbcHandler" />
            </list>
        </property>
    </bean>
</beans>
